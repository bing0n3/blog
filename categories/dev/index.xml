<?xml version="1.0" encoding="utf-8" standalone="yes"?><rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom"><channel><title>Dev on bing0ne Base</title><link>https://blog.bing0ne.com/categories/dev/</link><description>Recent content in Dev on bing0ne Base</description><generator>Hugo -- gohugo.io</generator><language>en</language><lastBuildDate>Fri, 06 Sep 2019 17:43:02 -0400</lastBuildDate><atom:link href="https://blog.bing0ne.com/categories/dev/index.xml" rel="self" type="application/rss+xml"/><item><title>[Leetcode] 329. Longest Increasing Path in a Matrix</title><link>https://blog.bing0ne.com/p/leetcode-329/</link><pubDate>Fri, 06 Sep 2019 17:43:02 -0400</pubDate><guid>https://blog.bing0ne.com/p/leetcode-329/</guid><description>&lt;h2 id=&#34;program-description&#34;&gt;Program Description&lt;/h2&gt;
&lt;p&gt;Given an integer matrix, find the length of the longest increasing path.&lt;/p&gt;
&lt;p&gt;From each cell, you can either move to four directions: left, right, up or down. You may NOT move diagonally or move outside of the boundary (i.e. wrap-around is not allowed).&lt;/p&gt;</description></item><item><title>[Leetcode] 329. Longest Increasing Path in a Matrix</title><link>https://blog.bing0ne.com/posts/leetcode-329/</link><pubDate>Fri, 06 Sep 2019 17:43:02 -0400</pubDate><guid>https://blog.bing0ne.com/posts/leetcode-329/</guid><description>&lt;h2 id=&#34;program-description&#34;&gt;Program Description&lt;/h2&gt;
&lt;p&gt;Given an integer matrix, find the length of the longest increasing path.&lt;/p&gt;
&lt;p&gt;From each cell, you can either move to four directions: left, right, up or down. You may NOT move diagonally or move outside of the boundary (i.e. wrap-around is not allowed).&lt;/p&gt;</description></item><item><title>Go中Slice的总结</title><link>https://blog.bing0ne.com/p/go-slice/</link><pubDate>Wed, 30 Jan 2019 12:31:04 -0500</pubDate><guid>https://blog.bing0ne.com/p/go-slice/</guid><description>&lt;p&gt;在刷leetcode的78题的时候，遇到了对slice的append的bug。&lt;/p&gt;</description></item><item><title>Go中Slice的总结</title><link>https://blog.bing0ne.com/posts/go-slice/</link><pubDate>Wed, 30 Jan 2019 12:31:04 -0500</pubDate><guid>https://blog.bing0ne.com/posts/go-slice/</guid><description>&lt;p&gt;在刷leetcode的78题的时候，遇到了对slice的append的bug。&lt;/p&gt;</description></item><item><title>How to install and Using MariaDB via Docker in Mac OS X</title><link>https://blog.bing0ne.com/p/mariadb-docker/</link><pubDate>Sat, 05 Jan 2019 22:47:30 -0500</pubDate><guid>https://blog.bing0ne.com/p/mariadb-docker/</guid><description>&lt;p&gt;This is a tutorial about how to install MariaDB in OS X.&lt;/p&gt;</description></item><item><title>How to install and Using MariaDB via Docker in Mac OS X</title><link>https://blog.bing0ne.com/posts/mariadb-docker/</link><pubDate>Sat, 05 Jan 2019 22:47:30 -0500</pubDate><guid>https://blog.bing0ne.com/posts/mariadb-docker/</guid><description>&lt;p&gt;This is a tutorial about how to install MariaDB in OS X.&lt;/p&gt;</description></item><item><title>LeetCode 02. Add Two Numbers</title><link>https://blog.bing0ne.com/p/leetcode-02/</link><pubDate>Mon, 23 Jul 2018 20:49:30 +0800</pubDate><guid>https://blog.bing0ne.com/p/leetcode-02/</guid><description>You are given two non-empty linked lists representing two non-negative integers. The digits are stored in reverse order and each of their nodes contain a single digit. Add the two numbers and return it as a linked list. You may assume the two numbers do not contain any leading zero, except the number 0 itself. Example Input: (2 -&amp;gt; 4 -&amp;gt; 3) + (5 -&amp;gt; 6 -&amp;gt; 4) Output: 7 -&amp;gt; 0 -&amp;gt; 8 Explanation: 342 + 465 = 807. Solution: 只需要遍历两个列表，并注意处理当两个数</description></item><item><title>LeetCode 02. Add Two Numbers</title><link>https://blog.bing0ne.com/posts/leetcode-02/</link><pubDate>Mon, 23 Jul 2018 20:49:30 +0800</pubDate><guid>https://blog.bing0ne.com/posts/leetcode-02/</guid><description>You are given two non-empty linked lists representing two non-negative integers. The digits are stored in reverse order and each of their nodes contain a single digit. Add the two numbers and return it as a linked list. You may assume the two numbers do not contain any leading zero, except the number 0 itself. Example Input: (2 -&amp;gt; 4 -&amp;gt; 3) + (5 -&amp;gt; 6 -&amp;gt; 4) Output: 7 -&amp;gt; 0 -&amp;gt; 8 Explanation: 342 + 465 = 807. Solution: 只需要遍历两个列表，并注意处理当两个数</description></item><item><title>LeetCode 01. TWO SUM</title><link>https://blog.bing0ne.com/p/leetcode-01/</link><pubDate>Sun, 22 Jul 2018 16:52:26 +0800</pubDate><guid>https://blog.bing0ne.com/p/leetcode-01/</guid><description>&lt;p&gt;这是LeetCode题库中的第一题。一个从数组中找到一对相加等于目标数的数的算法。文中我们使用了两种不同的方法来实现我们的算法。&lt;/p&gt;</description></item><item><title>LeetCode 01. TWO SUM</title><link>https://blog.bing0ne.com/posts/leetcode-01/</link><pubDate>Sun, 22 Jul 2018 16:52:26 +0800</pubDate><guid>https://blog.bing0ne.com/posts/leetcode-01/</guid><description>&lt;p&gt;这是LeetCode题库中的第一题。一个从数组中找到一对相加等于目标数的数的算法。文中我们使用了两种不同的方法来实现我们的算法。&lt;/p&gt;</description></item><item><title>使用Homebrew安装配置golang环境</title><link>https://blog.bing0ne.com/p/install-go/</link><pubDate>Wed, 06 Jun 2018 15:53:26 +0800</pubDate><guid>https://blog.bing0ne.com/p/install-go/</guid><description>&lt;p&gt;Go 语言是一个将静态语言的安全性和高效性与动态语言的易开发性进行有机结合的语言。&lt;/p&gt;</description></item><item><title>使用Homebrew安装配置golang环境</title><link>https://blog.bing0ne.com/posts/install-go/</link><pubDate>Wed, 06 Jun 2018 15:53:26 +0800</pubDate><guid>https://blog.bing0ne.com/posts/install-go/</guid><description>&lt;p&gt;Go 语言是一个将静态语言的安全性和高效性与动态语言的易开发性进行有机结合的语言。&lt;/p&gt;</description></item><item><title>CS229: 线性回归,梯度下降,正规方程</title><link>https://blog.bing0ne.com/p/cs229_note1_1/</link><pubDate>Thu, 13 Jul 2017 10:56:21 +0800</pubDate><guid>https://blog.bing0ne.com/p/cs229_note1_1/</guid><description>&lt;p&gt;线性回归是Ng Andrew在CS229中讲的第一个模型. 这里我们来解析一下他.&lt;/p&gt;</description></item><item><title>CS229: 线性回归,梯度下降,正规方程</title><link>https://blog.bing0ne.com/posts/cs229_note1_1/</link><pubDate>Thu, 13 Jul 2017 10:56:21 +0800</pubDate><guid>https://blog.bing0ne.com/posts/cs229_note1_1/</guid><description>&lt;p&gt;线性回归是Ng Andrew在CS229中讲的第一个模型. 这里我们来解析一下他.&lt;/p&gt;</description></item><item><title>给格格的穿墙教程</title><link>https://blog.bing0ne.com/p/ss-for-xyg/</link><pubDate>Fri, 23 Jun 2017 15:49:42 +0800</pubDate><guid>https://blog.bing0ne.com/p/ss-for-xyg/</guid><description>&lt;p&gt;一个更大的世界。&lt;/p&gt;
&lt;p&gt;本教程份为两个部分. 一部分是关于IOS的,另一部分是关于Windows的.&lt;/p&gt;</description></item><item><title>给格格的穿墙教程</title><link>https://blog.bing0ne.com/posts/ss-for-xyg/</link><pubDate>Fri, 23 Jun 2017 15:49:42 +0800</pubDate><guid>https://blog.bing0ne.com/posts/ss-for-xyg/</guid><description>&lt;p&gt;一个更大的世界。&lt;/p&gt;
&lt;p&gt;本教程份为两个部分. 一部分是关于IOS的,另一部分是关于Windows的.&lt;/p&gt;</description></item><item><title>基本的排序算法</title><link>https://blog.bing0ne.com/p/basic-sort/</link><pubDate>Fri, 26 Aug 2016 18:27:24 +0800</pubDate><guid>https://blog.bing0ne.com/p/basic-sort/</guid><description>&lt;p&gt;排序是算法领域重要的组成部分，本文将介绍几种重要的排序。
插入，选择，希尔，归并，快速排序，堆排序等。&lt;/p&gt;</description></item><item><title>基本的排序算法</title><link>https://blog.bing0ne.com/posts/basic-sort/</link><pubDate>Fri, 26 Aug 2016 18:27:24 +0800</pubDate><guid>https://blog.bing0ne.com/posts/basic-sort/</guid><description>&lt;p&gt;排序是算法领域重要的组成部分，本文将介绍几种重要的排序。
插入，选择，希尔，归并，快速排序，堆排序等。&lt;/p&gt;</description></item></channel></rss>